{"ast":null,"code":"var _jsxFileName = \"/Users/azharsaeed/Desktop/untitled folder/stripeprectise/client/src/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const element = useElements();\n  const [successful, setsuccessful] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefalut();\n    const {\n      error,\n      paymentMethod\n    } = stripe.createPaymentMethod({\n      type: 'card',\n      card: element.getElement(CardElement)\n    });\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n      console.log(id);\n    } else {\n      console.log('success payment');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PaymentForm, \"+LRe4i6TR90zOQGOvJYfeqoS784=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/azharsaeed/Desktop/untitled folder/stripeprectise/client/src/PaymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","PaymentForm","stripe","element","successful","setsuccessful","handleSubmit","e","preventDefalut","error","paymentMethod","createPaymentMethod","type","card","getElement","id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAMG,OAAO,GAAGJ,WAAW,EAA3B;AAEA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAGA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAACC,MAAAA,KAAD;AAASC,MAAAA;AAAT,QAA2BR,MAAM,CAACS,mBAAP,CAA2B;AAC3DC,MAAAA,IAAI,EAAG,MADoD;AAE3DC,MAAAA,IAAI,EAAGV,OAAO,CAACW,UAAR,CAAmBhB,WAAnB;AAFoD,KAA3B,CAAjC;;AAMA,QAAG,CAACW,KAAJ,EAAU;AACT,YAAM;AAACM,QAAAA;AAAD,UAAOL,aAAb;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,KAHD,MAII;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AACD,GAhBD;;AAkBA,sBACC;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA9BD;;GAAMhB,W;UACUD,S,EACCD,W;;;KAFXE,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React , {useState}  from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\n\nconst PaymentForm = () => {\n\tconst stripe = useStripe();\n\tconst element = useElements();\n\n\tconst [successful, setsuccessful] = useState(false);\n\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefalut();\n\n\t\tconst {error , paymentMethod} =  stripe.createPaymentMethod({\n\t\t\ttype : 'card',\n\t\t\tcard : element.getElement(CardElement)\n\t\t});\n\n\n\t\tif(!error){\n\t\t\tconst {id} = paymentMethod;\n\t\t\tconsole.log(id);\n\t\t}\n\t\telse{\n\t\t\tconsole.log('success payment');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t);\n};\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}